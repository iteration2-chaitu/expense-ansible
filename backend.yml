- name:  Backend setup
  hosts:  Backend
  become:  yes
  tasks:
    - name:  Disable default nodejs version module
      ansible.builtin.shell:  dnf module disable nodejs -y

    - name:  enable nodejs version 20
      ansible.builtin.shell: dnf module enable nodejs:20 -y

    - name: Install Nodejs
      ansible.builtin.dnf:
        name:  nodejs
        state: latest

    - name:  Adding application user
      ansible.builtin.user:
        name:  expense

    - name: cleanup the old content
      ansible.builtin.file:
        path:  /app
        state: absent

    - name: create the app directory
      ansible.builtin.file:
        path:  /app
        state: directory

    - name: Download and extract the app content
      ansible.builtin.unarchive:
        src: https://expense-artifacts.s3.amazonaws.com/expense-backend-v2.zip
        dest:  /app
        remote_src: yes

    - name:  Download Nodejs dependencies
      community.general.npm:
        path:  /app
        state: latest

    - name:   copy backend service file
      ansible.builtin.copy:
        src:  backend.service
        dest:  /etc/systemd/system/backend.service

    - name: Install python mysql client
      ansible.builtin.pip:
        name:
          - PyMySQL
          - cryptography
        executable:  pip3.9

    - name:  Load the schema
      community.mysql.mysql_db:
        state:  import
        name: all
        target:  /app/schema/backend.sql
        login_user:  root
        login_password:  ExpenseApp@1
        login_host:  mysql-dev-yml.chaitus.shop

    - name:  start backend service
      ansible.builtin.systemd_service:
        name:  backend
        state:  restarted
        enabled:  yes
        daemon_reload:  yes